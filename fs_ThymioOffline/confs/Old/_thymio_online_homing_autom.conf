%runs:30
%maxevolutions:4

--controllers classname=controllers.SimulatedThymioOnlineEvoController,
network=(
		classname=commoninterface.evolution.MacroNetwork,
		inputs=(
			IR=(
				classname=commoninterface.evolution.RealThymioNormalizedCIIRNNInputs,
				id=1
			),
			INNEST=(
				classname=commoninterface.evolution.RealThymioInNestNNInputs,
				id=2
			),
			DISTANCENEST=(
				classname=commoninterface.evolution.RealThymioDistanceNestNNInputs,
				id=3
			)
		),
		outputs=(
			TwoWheel=(
				classname=commoninterface.evolution.ThymioTwoWheelCINNOutput,
				id=1
			)
		)
),
task=(taskname=homing,maxenergy=1000.0,defaultfactor=0.00001,minenergy=0.00001),
evaluation=(policy=fixed,evalsteps=300,noevalperiod=0)

--environment classname=environment.ContinuousEvalSimpleArenaWithNestEnvironment,
	width=3,
	height=3,
	steps=36000,
	nestradius=0.25,randomise=1,change=300
	
--simulator network=(
		classname=network.SimulationNetwork
	)
--robots classname=robot.Thymio,out=X,
	distancewheels=0.2,
	numberofrobots=1,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=1,
    camerasensor=0,
    naivesensor=0,
    noiseenabled=0,
    camerasensor=0,
    nestsensor=1,
    stopactuator=0,
    sensors=(
		Sensor1=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioIRCISensor,
				id=1
				)
		),
		Sensor2=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIInNestSensor,
				id=2
				)
		),
		Sensor3=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIDistanceNestSensor,
				id=3
				)
		)
     )

--executor classname=ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--random-seed 1

%pop {
	--population classname=evolutionaryrobotics.populations.NEATPopulation,samples=1,generations=1,size=1
}

#evo_alone_1r{
	%pop
	--evaluation classname=evaluationfunctions.ThymioHomingEvaluationFunction
}

#evo_alone_4r{
	%pop
	--evaluation classname=evaluationfunctions.ThymioHomingEvaluationFunction
	--robots +numberofrobots=4
}

#evo_alone_7r{
	%pop
	--evaluation classname=evaluationfunctions.ThymioHomingEvaluationFunction
	--robots +numberofrobots=7
}

#evo_alone_10r{
	%pop
	--evaluation classname=evaluationfunctions.ThymioHomingEvaluationFunction
	--robots +numberofrobots=10
}
