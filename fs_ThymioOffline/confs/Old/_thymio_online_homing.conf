%runs:50
%maxevolutions:4


#task=(taskname=navigation-obstacle,maxenergy=1000.0,defaultfactor=0.00001,minenergy=0.00001)


--controllers classname=controllers.SimulatedThymioOnlineEvoController,
network=(
		classname=commoninterface.evolution.MacroNetwork,
		inputs=(
			IR=(
				classname=commoninterface.evolution.RealThymioNormalizedCIIRNNInputs,
				id=1
			),
			INNEST=(
				classname=commoninterface.evolution.RealThymioInNestNNInputs,
				id=2
			),
			DISTANCENEST=(
				classname=commoninterface.evolution.RealThymioDistanceNestNNInputs,
				id=3
			)
		),
		outputs=(
			TwoWheel=(
				classname=commoninterface.evolution.ThymioTwoWheelCINNOutput,
				id=1
			)
		)
),
task=(taskname=homing,maxenergy=1000.0,defaultfactor=0.00001,minenergy=0.00001),
evaluation=(policy=fixed,evalsteps=250,noevalperiod=50),
macroneurons=(encoding=macrogenome,macrospecialisation=1,macros=0,evolvedmacros=3,evolved_macro1=move_forward,evsensors1=0-1-2-3-4-5-6,evactuators1=7-8,evolved_macro2=turn_left,evsensors2=0-1-2-3-4-5-6,evactuators2=7-8,evolved_macro3=turn_right,evsensors3=0-1-2-3-4-5-6,evactuators3=7-8)


--environment classname=environment.SimpleArenaWithNestEnvironment,
	width=1,
	height=1,
	steps=36000,
	nestradius=0.05,randomise=0
	
--simulator network=(
		classname=network.SimulationNetwork
	)
--robots classname=robot.Thymio,
	distancewheels=0.2,
	numberofrobots=1,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=0,
    camerasensor=0,
    naivesensor=1,
    noiseenabled=0,
    camerasensor=0,
    nestsensor=1,
    stopactuator=0,
    sensors=(
		Sensor1=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioIRCISensor,
				id=1
				)
		),
		Sensor2=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIInNestSensor,
				id=2
				)
		),
		Sensor3=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIDistanceNestSensor,
				id=3
				)
		)
     )
	
--evaluation classname=evaluationfunctions.ThymioHomingEvaluationFunction

--output thymio_online_evo_homing_evo_alone

--executor classname=ParallelTaskExecutor

--population classname=evolutionaryrobotics.populations.NEATPopulation,samples=1,generations=1,size=1

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--random-seed 1
