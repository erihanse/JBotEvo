%runs:30
%maxevolutions:4

--controllers classname=controllers.SimulatedThymioOnlineEvoController,
network=(
		classname=commoninterface.evolution.MacroNetwork,
		inputs=(
			IR=(
				classname=commoninterface.evolution.RealThymioNormalizedCIIRNNInputs,
				id=1
			),
			INNESTA=(
				classname=commoninterface.evolution.RealThymioGeneralOneNNInputs,
				id=2
			),
			INNESTB=(
				classname=commoninterface.evolution.RealThymioGeneralOneNNInputs,
				id=3
			),
			GROUPINNESTA=(
				classname=commoninterface.evolution.RealThymioGeneralOneNNInputs,
				id=4
			),
			GROUPINNESTB=(
				classname=commoninterface.evolution.RealThymioGeneralOneNNInputs,
				id=5
			)
		),
		outputs=(
			TwoWheel=(
				classname=commoninterface.evolution.ThymioTwoWheelCINNOutput,
				id=1
			)
		)
),
task=(taskname=aggregation,maxenergy=1000.0,defaultfactor=0.00001,minenergy=0.00001),
evaluation=(policy=fixed,evalsteps=300,noevalperiod=0),
macroneurons=(encoding=macrogenome,macrospecialisation=1,macros=0,evolvedmacros=3,evolved_macro1=move_forward,evsensors1=0-1-2-3-4-5-6,evactuators1=11-12,evolved_macro2=turn_left,evsensors2=0-1-2-3-4-5-6,evactuators2=11-12,evolved_macro3=turn_right,evsensors3=0-1-2-3-4-5-6,evactuators3=11-12)

--environment classname=environment.MultiPartEnvironment,
	width=1.732,
	height=1.732,
	steps=36000
	
--simulator network=(
		classname=network.SimulationNetwork
	)
--robots classname=robot.Thymio,out=X,
	distancewheels=0.2,
	numberofrobots=9,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=1,
    camerasensor=0,
    naivesensor=1,
    noiseenabled=0,
    camerasensor=0,
    multinestsensor=1,
    stopactuator=0,
    sensors=(
		Sensor1=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioIRCISensor,
				id=1
				)
		),
		Sensor2=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIInAreaASensor,
				id=2
				)
		),
		Sensor3=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIInAreaBSensor,
				id=3,
				)
		),
		Sensor4=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIGroupAreaASensor,
				id=4,robots=9
				)
		),
		Sensor5=(
			classname=sensors.CISensorWrapper,
				ci=(
				classname=commoninterface.sensors.ThymioCIGroupAreaBSensor,
				id=5,robots=9
				)
		)
     )

--executor classname=ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--random-seed 1

%pop {
	--population classname=evolutionaryrobotics.populations.NEATPopulation,samples=1,generations=1,size=1
}

#macro_spec_9robots_reuse0.0{
	%pop
	--evaluation classname=evaluationfunctions.ThymioAggregation
}
