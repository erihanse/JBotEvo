%runs:30
%maxevolutions:4

--environment classname=environment.SimpleArenaWithNestEnvironment,
	width=1,
	height=1,
	steps=300,nestradius=0.05
--controllers classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.evolution.neat.NEATNeuralNetwork,
		inputs=(
			ThymioNNInput=(classname=ThymioNNInput,id=1),
			NestInput=(classname=SensorNNInput,id=2),
			NestDistanceInput=(classname=Sensor2NNInput,id=3)
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=TwoWheelNNOutput,
				id=1
			)
		)
	)
--simulator network=(
		classname=network.SimulationNetwork
	)
--robots classname=robot.Thymio,
	numberofrobots=1,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=0,
    camerasensor=0,
    naivesensor=1,
    noiseenabled=0,
    camerasensor=0,
    nestsensor=1,
    stopactuator=0
	
--evaluation classname=evaluationfunctions.ThymioHomingEvaluationFunction,noevalperiod=50

--executor classname=ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--random-seed 1

%pop {
    --population classname=evolutionaryrobotics.populations.NEATPopulation,samples=10,generations=100,size=100
}

#naive_sensor_no_noise_v2{
    %pop
    --postevaluation samples=100
}

#naive_sensor_conservative_noise_v2{
    %pop
    --postevaluation samples=100
    --robots +noiseenabled=1
}

#real_samples_v2{
    %pop
    --postevaluation samples=100
    --robots +naivesensor=0
}
