%runs:30
%maxevolutions:8

--environment classname=environment.TurnSideEnvironment,
	steps=150
--controllers classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.evolution.neat.NEATNeuralNetwork,
		inputs=(
			ThymioNNInput=(classname=ThymioNNInput,
				id=1
			)
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=TwoWheelNNOutput,
				id=1
			)
		)
	)
--simulator network=(
		classname=network.SimulationNetwork
	)
--robots classname=robot.Thymio,
	distancewheels=0.2,
	numberofrobots=1,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=0,
    camerasensor=0,
    naivesensor=1,
    noiseenabled=1,
    camerasensor=0

--executor classname=ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--random-seed 1

%pop {
    --population classname=evolutionaryrobotics.populations.NEATPopulation,samples=10,generations=100,size=100
}

#turn_left{
    %pop
    --evaluation classname=evaluationfunctions.TurnLeftEvaluationFunction
    --postevaluation samples=100
}

#turn_right{
    %pop
    --evaluation classname=evaluationfunctions.TurnRightEvaluationFunction
    --postevaluation samples=100
}

#move_forward{
    %pop
    --evaluation classname=evaluationfunctions.MoveForwardEvaluationFunction
    --environment classname=environment.MoveForwardEnvironment,steps=150
    --postevaluation samples=100
}
