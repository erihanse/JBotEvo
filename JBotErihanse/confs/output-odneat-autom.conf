%runs:30
--output output-random-walk

--robots
 	classname=erihanse.robot.ODNetworkRobot,
	distancewheels=0.2,
	numberofrobots=10,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=0,
	camerasensor=0,
	naivesensor=1,
	noiseenabled=0,
	nestsensor=1,
	stopactuator=0,
	sensors=(
		CISensorWrapper_1=(
			classname=sensors.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.ThymioIRCISensor,
				id=1
			),
			id=1
		),
		CISensorWrapper_2=(
			classname=sensors.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.ThymioCIInNestSensor,
				id=2
			),
			id=2
		),
		CISensorWrapper_3=(
			classname=sensors.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.ThymioCIDistanceNestSensor,
				id=3
			),
			id=3
		),
		CISensorWrapper=(
			classname=simulation.robot.CISensorWrapper,
				ci=(
					classname=erihanse.commoninterface.sensors.DistanceTravelledCISensor,
					id=4
				),
			id=4
		)
	)

--controllers
	classname=erihanse.controllers.SimulatedThymioODNetworkController,
	task=(
		taskname=connectivity,
		maxenergy=1000.0,
		defaultfactor=0.00001,
		minenergy=0.00001
	),
	evaluation=(
		policy="",
		evalsteps=250,
		noevalperiod=0,
		maturationperiod=500
	),
	network=(
		classname=commoninterface.evolution.MacroNetwork,
		inputs=(
			IR=(
				classname=commoninterface.evolution.RealThymioNormalizedCIIRNNInputs,
				id=1
			),
			INNEST=(
				classname=commoninterface.evolution.RealThymioInNestNNInputs,
				id=2
			),
			DISTANCENEST=(
				classname=commoninterface.evolution.RealThymioDistanceNestNNInputs,
				id=3
			)
		),
		outputs=(
			TwoWheel=(
				classname=commoninterface.evolution.ThymioTwoWheelCINNOutput,
				id=1
			)
		)
	)

--population
 	classname=evolutionaryrobotics.populations.NEATPopulation,
	samples=1,
	generations=1,
	size=1

--environment
 	classname=erihanse.environment.EAHSimpleArenaEnvironment,
	width=4,
	height=4,
	steps=10000,
	nestradius=0.05,
	randomise=0

--executor classname=taskexecutor.ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--evaluation classname=erihanse.evaluationfunction.FullConnectionTimerEvaluationFunction

--random-seed 2

--simulator network=(classname=network.SimulationNetwork)

--updatables
	ResultWriter=(classname=erihanse.ResultWriter,filename=output.txt)

%pop {
	--population classname=evolutionaryrobotics.populations.NEATPopulation,samples=1,generations=1,size=1
}

#odneat10robots{
    %pop
	--updatables ResultWriter=(classname=erihanse.ResultWriter,filename=output-odneat-10robots.txt)
	--robots +numberofrobots=10
	--controllers +classname=erihanse.robot.controllers.SimulatedThymioODNetworkController
}

#odneat20robots{
    %pop
	--updatables ResultWriter=(classname=erihanse.ResultWriter,filename=output-odneat-15robots.txt)
	--robots +numberofrobots=15
	--controllers +classname=erihanse.robot.controllers.SimulatedThymioODNetworkController
}

#odneat30robots{
    %pop
	--updatables ResultWriter=(classname=erihanse.ResultWriter,filename=output-odneat-20robots.txt)
	--robots +numberofrobots=20
	--controllers +classname=erihanse.robot.controllers.SimulatedThymioODNetworkController
}