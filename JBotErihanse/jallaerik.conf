--output jallaerik

--robots
 	classname=erihanse.robot.ODNetworkRobot,
	distancewheels=0.2,
	numberofrobots=10,
	radius=0.08,
	maxspeed=0.20,
	irsenserobot=0,
	camerasensor=0,
	naivesensor=1,
	noiseenabled=0,
	nestsensor=1,
	stopactuator=0,
	sensors=(
		CISensorWrapper_1=(
			classname=sensors.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.ThymioIRCISensor,
				id=1
			),
			id=1
		),
		CISensorWrapper_2=(
			classname=sensors.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.ThymioCIInNestSensor,
				id=2
			),
			id=2
		),
		CISensorWrapper_3=(
			classname=sensors.CISensorWrapper,
			ci=(
				classname=commoninterface.sensors.ThymioCIDistanceNestSensor,
				id=3
			),
			id=3
		)
	)

--controllers
 	classname=controllers.SimulatedThymioOnlineEvoController,
	task=(
		taskname=homing,
		maxenergy=1000.0,
		defaultfactor=0.00001,
		minenergy=0.00001
	),
	evaluation=(
		policy=fixed,
		evalsteps=250,
		noevalperiod=50
	),
	macroneurons=(
		encoding=macrogenome,
		macrospecialisation=0,
		macros=0,
		evolvedmacros=0,
		evolved_macro1=move_forward,
		evsensors1=0-1-2-3-4-5-6,
		evactuators1=7-8,
		evolved_macro2=turn_left,
		evsensors2=0-1-2-3-4-5-6,
		evactuators2=7-8,
		evolved_macro3=turn_right,
		evsensors3=0-1-2-3-4-5-6,
		evactuators3=7-8
	),
	network=(
		classname=commoninterface.evolution.MacroNetwork,
		inputs=(
			IR=(
				classname=commoninterface.evolution.RealThymioNormalizedCIIRNNInputs,
				id=1
			),
			INNEST=(
				classname=commoninterface.evolution.RealThymioInNestNNInputs,
				id=2
			),
			DISTANCENEST=(
				classname=commoninterface.evolution.RealThymioDistanceNestNNInputs,
				id=3
			)
		),
		outputs=(
			TwoWheel=(
				classname=commoninterface.evolution.ThymioTwoWheelCINNOutput,
				id=1
			)
		)
	)

--population
 	classname=evolutionaryrobotics.populations.NEATPopulation,
	samples=1,
	generations=1,
	size=1

--environment
 	classname=erihanse.environment.EAHSimpleArenaEnvironment,
	width=4,
	height=4,
	steps=300,
	nestradius=0.05,
	randomise=0

--executor classname=taskexecutor.ParallelTaskExecutor

--evolution classname=evolutionaryrobotics.evolution.NEATEvolution

--evaluation classname=erihanse.evaluationfunction.SourceHopsEvaluationFunction

--random-seed 1

--simulator network=(classname=network.SimulationNetwork)
